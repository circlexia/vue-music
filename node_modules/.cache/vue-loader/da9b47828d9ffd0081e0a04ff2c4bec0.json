{"remainingRequest":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/circle/Desktop/vue-music/src/components/suggest/suggest.vue?vue&type=style&index=0&id=28813599&scoped=true&lang=stylus&rel=stylesheet%2Fstylus&","dependencies":[{"path":"/Users/circle/Desktop/vue-music/src/components/suggest/suggest.vue","mtime":1574170630927},{"path":"/Users/circle/Desktop/vue-music/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/circle/Desktop/vue-music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"~common/stylus/variable\"\n@import \"~common/stylus/mixin\"\n\n.suggest\n  height: 100%\n  overflow: hidden\n  .suggest-list\n    padding: 0 30px\n    .suggest-item\n      display: flex\n      align-items: center\n      padding-bottom: 20px\n    .icon\n      flex: 0 0 30px\n      width: 30px\n      [class^=\"icon-\"]\n        font-size: 14px\n        color: $color-text-d\n    .name\n      flex: 1\n      font-size: $font-size-medium\n      color: $color-text-d\n      overflow: hidden\n      .text\n        no-wrap()\n  .no-result-wrapper\n    position: absolute\n    width: 100%\n    top: 50%\n    transform: translateY(-50%)\n",{"version":3,"sources":["suggest.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2KA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"suggest.vue","sourceRoot":"src/components/suggest","sourcesContent":["<template>\n  <scroll ref=\"suggest\"\n          class=\"suggest\"\n          :data=\"result\"\n          :pullup=\"pullup\"\n          :beforeScroll=\"beforeScroll\"\n          @scrollToEnd=\"searchMore\"\n          @beforeScroll=\"listScroll\"\n  >\n    <ul class=\"suggest-list\">\n      <li @click=\"selectItem(item)\" class=\"suggest-item\" v-for=\"(item,index) in result\" :key=\"index\">\n        <div class=\"icon\">\n          <i :class=\"getIconCls(item)\"></i>\n        </div>\n        <div class=\"name\">\n          <p class=\"text\" v-html=\"getDisplayName(item)\"></p>\n        </div>\n      </li>\n      <loading v-show=\"hasMore\" title=\"\"></loading>\n    </ul>\n    <div v-show=\"!hasMore && !result.length\" class=\"no-result-wrapper\">\n      <no-result title=\"抱歉，暂无搜索结果\"></no-result>\n    </div>\n  </scroll>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import Scroll from 'base/scroll/scroll'\n  import Loading from 'base/loading/loading'\n  import NoResult from 'base/no-result/no-result'\n  import { search } from 'api/search'\n  import { ERR_OK } from 'api/config'\n  import { createSong, isValidMusic, processSongsUrl } from 'common/js/song'\n  import { mapMutations, mapActions } from 'vuex'\n  import Singer from 'common/js/singer'\n\n  const TYPE_SINGER = 'singer'\n  const perpage = 20\n\n  export default {\n    props: {\n      showSinger: {\n        type: Boolean,\n        default: true\n      },\n      query: {\n        type: String,\n        default: ''\n      }\n    },\n    data () {\n      return {\n        page: 1,\n        pullup: true,\n        beforeScroll: true,\n        hasMore: true,\n        result: []\n      }\n    },\n    methods: {\n      refresh () {\n        this.$refs.suggest.refresh()\n      },\n      search () {\n        this.page = 1\n        this.hasMore = true\n        this.$refs.suggest.scrollTo(0, 0)\n        search(this.query, this.page, this.showSinger, perpage).then((res) => {\n          if (res.code === ERR_OK) {\n            this._genResult(res.data).then((result) => {\n              this.result = result\n            })\n            this._checkMore(res.data)\n          }\n        })\n      },\n      searchMore () {\n        if (!this.hasMore) {\n          return\n        }\n        this.page++\n        search(this.query, this.page, this.showSinger, perpage).then((res) => {\n          if (res.code === ERR_OK) {\n            this._genResult(res.data).then((result) => {\n              this.result = this.result.concat(result)\n            })\n            this._checkMore(res.data)\n          }\n        })\n      },\n      listScroll () {\n        this.$emit('listScroll')\n      },\n      selectItem (item) {\n        if (item.type === TYPE_SINGER) {\n          const singer = new Singer({\n            id: item.singermid,\n            name: item.singername\n          })\n          this.$router.push({\n            path: `/search/${singer.id}`\n          })\n          this.setSinger(singer)\n        } else {\n          this.insertSong(item)\n        }\n        this.$emit('select', item)\n      },\n      getDisplayName (item) {\n        if (item.type === TYPE_SINGER) {\n          return item.singername\n        } else {\n          return `${item.name}-${item.singer}`\n        }\n      },\n      getIconCls (item) {\n        if (item.type === TYPE_SINGER) {\n          return 'icon-mine'\n        } else {\n          return 'icon-music'\n        }\n      },\n      _genResult (data) {\n        let ret = []\n        if (data.zhida && data.zhida.singerid && this.page === 1) {\n          ret.push({ ...data.zhida, ...{ type: TYPE_SINGER } })\n        }\n        return processSongsUrl(this._normalizeSongs(data.song.list)).then((songs) => {\n          ret = ret.concat(songs)\n          return ret\n        })\n      },\n      _normalizeSongs (list) {\n        let ret = []\n        list.forEach((musicData) => {\n          if (isValidMusic(musicData)) {\n            ret.push(createSong(musicData))\n          }\n        })\n        return ret\n      },\n      _checkMore (data) {\n        const song = data.song\n        if (!song.list.length || (song.curnum + (song.curpage - 1) * perpage) >= song.totalnum) {\n          this.hasMore = false\n        }\n      },\n      ...mapMutations({\n        setSinger: 'SET_SINGER'\n      }),\n      ...mapActions([\n        'insertSong'\n      ])\n    },\n    watch: {\n      query (newQuery) {\n        if (!newQuery) {\n          return\n        }\n        this.search(newQuery)\n      }\n    },\n    components: {\n      Scroll,\n      Loading,\n      NoResult\n    }\n  }\n</script>\n\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @import \"~common/stylus/variable\"\n  @import \"~common/stylus/mixin\"\n\n  .suggest\n    height: 100%\n    overflow: hidden\n    .suggest-list\n      padding: 0 30px\n      .suggest-item\n        display: flex\n        align-items: center\n        padding-bottom: 20px\n      .icon\n        flex: 0 0 30px\n        width: 30px\n        [class^=\"icon-\"]\n          font-size: 14px\n          color: $color-text-d\n      .name\n        flex: 1\n        font-size: $font-size-medium\n        color: $color-text-d\n        overflow: hidden\n        .text\n          no-wrap()\n    .no-result-wrapper\n      position: absolute\n      width: 100%\n      top: 50%\n      transform: translateY(-50%)\n</style>\n"]}]}