{"remainingRequest":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/circle/Desktop/vue-music/src/base/progress-bar/progress-bar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/circle/Desktop/vue-music/src/base/progress-bar/progress-bar.vue","mtime":1574170630919},{"path":"/Users/circle/Desktop/vue-music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { prefixStyle } from 'common/js/dom'\n\nconst progressBtnWidth = 16\nconst transform = prefixStyle('transform')\n\nexport default {\n  props: {\n    percent: {\n      type: Number,\n      default: 0\n    }\n  },\n  created () {\n    this.touch = {}\n  },\n  methods: {\n    progressTouchStart (e) {\n      this.touch.initiated = true\n      this.touch.startX = e.touches[0].pageX\n      this.touch.left = this.$refs.progress.clientWidth\n    },\n    progressTouchMove (e) {\n      if (!this.touch.initiated) {\n        return\n      }\n      const deltaX = e.touches[0].pageX - this.touch.startX\n      const offsetWidth = Math.min(this.$refs.progressBar.clientWidth - progressBtnWidth, Math.max(0, this.touch.left + deltaX))\n      this._offset(offsetWidth)\n      this.$emit('percentChanging', this._getPercent())\n    },\n    progressTouchEnd () {\n      this.touch.initiated = false\n      this._triggerPercent()\n    },\n    progressClick (e) {\n      const rect = this.$refs.progressBar.getBoundingClientRect()\n      const offsetWidth = e.pageX - rect.left\n      this._offset(offsetWidth)\n      // 这里当我们点击 progressBtn 的时候，e.offsetX 获取不对\n      // this._offset(e.offsetX)\n      this._triggerPercent()\n    },\n    setProgressOffset (percent) {\n      if (percent >= 0 && !this.touch.initiated) {\n        const barWidth = this.$refs.progressBar.clientWidth - progressBtnWidth\n        const offsetWidth = percent * barWidth\n        this._offset(offsetWidth)\n      }\n    },\n    _triggerPercent () {\n      this.$emit('percentChange', this._getPercent())\n    },\n    _offset (offsetWidth) {\n      this.$refs.progress.style.width = `${offsetWidth}px`\n      this.$refs.progressBtn.style[transform] = `translate3d(${offsetWidth}px,0,0)`\n    },\n    _getPercent () {\n      const barWidth = this.$refs.progressBar.clientWidth - progressBtnWidth\n      return this.$refs.progress.clientWidth / barWidth\n    }\n  },\n  watch: {\n    percent (newPercent) {\n      this.setProgressOffset(newPercent)\n    }\n  }\n}\n",{"version":3,"sources":["progress-bar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgBA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"progress-bar.vue","sourceRoot":"src/base/progress-bar","sourcesContent":["<template>\n  <div class=\"progress-bar\" ref=\"progressBar\" @click=\"progressClick\">\n    <div class=\"bar-inner\">\n      <div class=\"progress\" ref=\"progress\"></div>\n      <div class=\"progress-btn-wrapper\" ref=\"progressBtn\"\n           @touchstart.prevent=\"progressTouchStart\"\n           @touchmove.prevent=\"progressTouchMove\"\n           @touchend=\"progressTouchEnd\"\n      >\n        <div class=\"progress-btn\"></div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import { prefixStyle } from 'common/js/dom'\n\n  const progressBtnWidth = 16\n  const transform = prefixStyle('transform')\n\n  export default {\n    props: {\n      percent: {\n        type: Number,\n        default: 0\n      }\n    },\n    created () {\n      this.touch = {}\n    },\n    methods: {\n      progressTouchStart (e) {\n        this.touch.initiated = true\n        this.touch.startX = e.touches[0].pageX\n        this.touch.left = this.$refs.progress.clientWidth\n      },\n      progressTouchMove (e) {\n        if (!this.touch.initiated) {\n          return\n        }\n        const deltaX = e.touches[0].pageX - this.touch.startX\n        const offsetWidth = Math.min(this.$refs.progressBar.clientWidth - progressBtnWidth, Math.max(0, this.touch.left + deltaX))\n        this._offset(offsetWidth)\n        this.$emit('percentChanging', this._getPercent())\n      },\n      progressTouchEnd () {\n        this.touch.initiated = false\n        this._triggerPercent()\n      },\n      progressClick (e) {\n        const rect = this.$refs.progressBar.getBoundingClientRect()\n        const offsetWidth = e.pageX - rect.left\n        this._offset(offsetWidth)\n        // 这里当我们点击 progressBtn 的时候，e.offsetX 获取不对\n        // this._offset(e.offsetX)\n        this._triggerPercent()\n      },\n      setProgressOffset (percent) {\n        if (percent >= 0 && !this.touch.initiated) {\n          const barWidth = this.$refs.progressBar.clientWidth - progressBtnWidth\n          const offsetWidth = percent * barWidth\n          this._offset(offsetWidth)\n        }\n      },\n      _triggerPercent () {\n        this.$emit('percentChange', this._getPercent())\n      },\n      _offset (offsetWidth) {\n        this.$refs.progress.style.width = `${offsetWidth}px`\n        this.$refs.progressBtn.style[transform] = `translate3d(${offsetWidth}px,0,0)`\n      },\n      _getPercent () {\n        const barWidth = this.$refs.progressBar.clientWidth - progressBtnWidth\n        return this.$refs.progress.clientWidth / barWidth\n      }\n    },\n    watch: {\n      percent (newPercent) {\n        this.setProgressOffset(newPercent)\n      }\n    }\n  }\n</script>\n\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @import \"~common/stylus/variable\"\n\n  .progress-bar\n    height: 30px\n    .bar-inner\n      position: relative\n      top: 13px\n      height: 4px\n      background: rgba(0, 0, 0, 0.3)\n      .progress\n        position: absolute\n        height: 100%\n        background: $color-theme\n      .progress-btn-wrapper\n        position: absolute\n        left: -8px\n        top: -13px\n        width: 30px\n        height: 30px\n        .progress-btn\n          position: relative\n          top: 7px\n          left: 7px\n          box-sizing: border-box\n          width: 16px\n          height: 16px\n          border: 3px solid $color-text\n          border-radius: 50%\n          background: $color-theme\n</style>\n"]}]}