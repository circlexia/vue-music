{"remainingRequest":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/circle/Desktop/vue-music/src/base/slider/slider.vue?vue&type=style&index=0&id=440d73ac&scoped=true&lang=stylus&rel=stylesheet%2Fstylus&","dependencies":[{"path":"/Users/circle/Desktop/vue-music/src/base/slider/slider.vue","mtime":1574170630920},{"path":"/Users/circle/Desktop/vue-music/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/stylus-loader/index.js","mtime":1519606876000},{"path":"/Users/circle/Desktop/vue-music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"~common/stylus/variable\"\n\n.slider\n  min-height: 1px\n  .slider-group\n    position: relative\n    overflow: hidden\n    white-space: nowrap\n    .slider-item\n      float: left\n      box-sizing: border-box\n      overflow: hidden\n      text-align: center\n      a\n        display: block\n        width: 100%\n        overflow: hidden\n        text-decoration: none\n      img\n        display: block\n        width: 100%\n  .dots\n    position: absolute\n    right: 0\n    left: 0\n    bottom: 12px\n    transform: translateZ(1px)\n    text-align: center\n    font-size: 0\n    .dot\n      display: inline-block\n      margin: 0 4px\n      width: 8px\n      height: 8px\n      border-radius: 50%\n      background: $color-text-l\n      &.active\n        width: 20px\n        border-radius: 5px\n        background: $color-text-ll\n",{"version":3,"sources":["slider.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2JA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"slider.vue","sourceRoot":"src/base/slider","sourcesContent":["<template>\n  <div class=\"slider\" ref=\"slider\">\n    <div class=\"slider-group\" ref=\"sliderGroup\">\n      <slot>\n      </slot>\n    </div>\n    <div class=\"dots\">\n      <span class=\"dot\" :class=\"{active: currentPageIndex === index }\" v-for=\"(item, index) in dots\"\n            :key=\"index\"></span>\n    </div>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import { addClass } from 'common/js/dom'\n  import BScroll from 'better-scroll'\n\n  export default {\n    name: 'slider',\n    props: {\n      loop: {\n        type: Boolean,\n        default: true\n      },\n      autoPlay: {\n        type: Boolean,\n        default: true\n      },\n      interval: {\n        type: Number,\n        default: 4000\n      }\n    },\n    data () {\n      return {\n        dots: [],\n        currentPageIndex: 0\n      }\n    },\n    mounted () {\n      setTimeout(() => {\n        this._setSliderWidth()\n        this._initDots()\n        this._initSlider()\n\n        if (this.autoPlay) {\n          this._play()\n        }\n      }, 20)\n\n      window.addEventListener('resize', () => {\n        if (!this.slider || !this.slider.enabled) {\n          return\n        }\n        clearTimeout(this.resizeTimer)\n        this.resizeTimer = setTimeout(() => {\n          if (this.slider.isInTransition) {\n            this._onScrollEnd()\n          } else {\n            if (this.autoPlay) {\n              this._play()\n            }\n          }\n          this.refresh()\n        }, 60)\n      })\n    },\n    activated () {\n      this.slider.enable()\n      let pageIndex = this.slider.getCurrentPage().pageX\n      this.slider.goToPage(pageIndex, 0, 0)\n      this.currentPageIndex = pageIndex\n      if (this.autoPlay) {\n        this._play()\n      }\n    },\n    deactivated () {\n      this.slider.disable()\n      clearTimeout(this.timer)\n    },\n    beforeDestroy () {\n      this.slider.disable()\n      clearTimeout(this.timer)\n    },\n    methods: {\n      refresh () {\n        if (this.slider) {\n          this._setSliderWidth(true)\n          this.slider.refresh()\n        }\n      },\n      _setSliderWidth (isResize) {\n        this.children = this.$refs.sliderGroup.children\n\n        let width = 0\n        let sliderWidth = this.$refs.slider.clientWidth\n        for (let i = 0; i < this.children.length; i++) {\n          let child = this.children[i]\n          addClass(child, 'slider-item')\n\n          child.style.width = sliderWidth + 'px'\n          width += sliderWidth\n        }\n        if (this.loop && !isResize) {\n          width += 2 * sliderWidth\n        }\n        this.$refs.sliderGroup.style.width = width + 'px'\n      },\n      _initSlider () {\n        this.slider = new BScroll(this.$refs.slider, {\n          scrollX: true,\n          scrollY: false,\n          momentum: false,\n          snap: {\n            loop: this.loop,\n            threshold: 0.3,\n            speed: 400\n          }\n        })\n\n        this.slider.on('scrollEnd', this._onScrollEnd)\n\n        this.slider.on('touchend', () => {\n          if (this.autoPlay) {\n            this._play()\n          }\n        })\n\n        this.slider.on('beforeScrollStart', () => {\n          if (this.autoPlay) {\n            clearTimeout(this.timer)\n          }\n        })\n      },\n      _onScrollEnd () {\n        let pageIndex = this.slider.getCurrentPage().pageX\n        this.currentPageIndex = pageIndex\n        if (this.autoPlay) {\n          this._play()\n        }\n      },\n      _initDots () {\n        this.dots = new Array(this.children.length)\n      },\n      _play () {\n        clearTimeout(this.timer)\n        this.timer = setTimeout(() => {\n          this.slider.next()\n        }, this.interval)\n      }\n    }\n  }\n</script>\n\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @import \"~common/stylus/variable\"\n\n  .slider\n    min-height: 1px\n    .slider-group\n      position: relative\n      overflow: hidden\n      white-space: nowrap\n      .slider-item\n        float: left\n        box-sizing: border-box\n        overflow: hidden\n        text-align: center\n        a\n          display: block\n          width: 100%\n          overflow: hidden\n          text-decoration: none\n        img\n          display: block\n          width: 100%\n    .dots\n      position: absolute\n      right: 0\n      left: 0\n      bottom: 12px\n      transform: translateZ(1px)\n      text-align: center\n      font-size: 0\n      .dot\n        display: inline-block\n        margin: 0 4px\n        width: 8px\n        height: 8px\n        border-radius: 50%\n        background: $color-text-l\n        &.active\n          width: 20px\n          border-radius: 5px\n          background: $color-text-ll\n</style>\n"]}]}