{"remainingRequest":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/circle/Desktop/vue-music/src/base/scroll/scroll.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/circle/Desktop/vue-music/src/base/scroll/scroll.vue","mtime":1574170630919},{"path":"/Users/circle/Desktop/vue-music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport BScroll from 'better-scroll'\n\nconst DIRECTION_H = 'horizontal'\nconst DIRECTION_V = 'vertical'\n\nexport default {\n  props: {\n    probeType: {\n      type: Number,\n      default: 1\n    },\n    click: {\n      type: Boolean,\n      default: false\n    },\n    listenScroll: {\n      type: Boolean,\n      default: false\n    },\n    data: {\n      type: Array,\n      default: null\n    },\n    pullup: {\n      type: Boolean,\n      default: false\n    },\n    beforeScroll: {\n      type: Boolean,\n      default: false\n    },\n    refreshDelay: {\n      type: Number,\n      default: 20\n    },\n    direction: {\n      type: String,\n      default: DIRECTION_V\n    }\n  },\n  mounted () {\n    setTimeout(() => {\n      this._initScroll()\n    }, 20)\n  },\n  methods: {\n    _initScroll () {\n      if (!this.$refs.wrapper) {\n        return\n      }\n      this.scroll = new BScroll(this.$refs.wrapper, {\n        probeType: this.probeType,\n        click: this.click,\n        eventPassthrough: this.direction === DIRECTION_V ? DIRECTION_H : DIRECTION_V\n      })\n\n      if (this.listenScroll) {\n        this.scroll.on('scroll', (pos) => {\n          this.$emit('scroll', pos)\n        })\n      }\n\n      if (this.pullup) {\n        this.scroll.on('scrollEnd', () => {\n          if (this.scroll.y <= (this.scroll.maxScrollY + 50)) {\n            this.$emit('scrollToEnd')\n          }\n        })\n      }\n\n      if (this.beforeScroll) {\n        this.scroll.on('beforeScrollStart', () => {\n          this.$emit('beforeScroll')\n        })\n      }\n    },\n    disable () {\n      this.scroll && this.scroll.disable()\n    },\n    enable () {\n      this.scroll && this.scroll.enable()\n    },\n    refresh () {\n      this.scroll && this.scroll.refresh()\n    },\n    scrollTo () {\n      this.scroll && this.scroll.scrollTo.apply(this.scroll, arguments)\n    },\n    scrollToElement () {\n      this.scroll && this.scroll.scrollToElement.apply(this.scroll, arguments)\n    }\n  },\n  watch: {\n    data () {\n      setTimeout(() => {\n        this.refresh()\n      }, this.refreshDelay)\n    }\n  }\n}\n",{"version":3,"sources":["scroll.vue"],"names":[],"mappings":";;;;;;;AAOA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scroll.vue","sourceRoot":"src/base/scroll","sourcesContent":["<template>\n  <div ref=\"wrapper\">\n    <slot></slot>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import BScroll from 'better-scroll'\n\n  const DIRECTION_H = 'horizontal'\n  const DIRECTION_V = 'vertical'\n\n  export default {\n    props: {\n      probeType: {\n        type: Number,\n        default: 1\n      },\n      click: {\n        type: Boolean,\n        default: false\n      },\n      listenScroll: {\n        type: Boolean,\n        default: false\n      },\n      data: {\n        type: Array,\n        default: null\n      },\n      pullup: {\n        type: Boolean,\n        default: false\n      },\n      beforeScroll: {\n        type: Boolean,\n        default: false\n      },\n      refreshDelay: {\n        type: Number,\n        default: 20\n      },\n      direction: {\n        type: String,\n        default: DIRECTION_V\n      }\n    },\n    mounted () {\n      setTimeout(() => {\n        this._initScroll()\n      }, 20)\n    },\n    methods: {\n      _initScroll () {\n        if (!this.$refs.wrapper) {\n          return\n        }\n        this.scroll = new BScroll(this.$refs.wrapper, {\n          probeType: this.probeType,\n          click: this.click,\n          eventPassthrough: this.direction === DIRECTION_V ? DIRECTION_H : DIRECTION_V\n        })\n\n        if (this.listenScroll) {\n          this.scroll.on('scroll', (pos) => {\n            this.$emit('scroll', pos)\n          })\n        }\n\n        if (this.pullup) {\n          this.scroll.on('scrollEnd', () => {\n            if (this.scroll.y <= (this.scroll.maxScrollY + 50)) {\n              this.$emit('scrollToEnd')\n            }\n          })\n        }\n\n        if (this.beforeScroll) {\n          this.scroll.on('beforeScrollStart', () => {\n            this.$emit('beforeScroll')\n          })\n        }\n      },\n      disable () {\n        this.scroll && this.scroll.disable()\n      },\n      enable () {\n        this.scroll && this.scroll.enable()\n      },\n      refresh () {\n        this.scroll && this.scroll.refresh()\n      },\n      scrollTo () {\n        this.scroll && this.scroll.scrollTo.apply(this.scroll, arguments)\n      },\n      scrollToElement () {\n        this.scroll && this.scroll.scrollToElement.apply(this.scroll, arguments)\n      }\n    },\n    watch: {\n      data () {\n        setTimeout(() => {\n          this.refresh()\n        }, this.refreshDelay)\n      }\n    }\n  }\n</script>\n\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\n\n</style>\n"]}]}