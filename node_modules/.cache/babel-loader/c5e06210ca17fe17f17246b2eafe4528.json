{"remainingRequest":"/Users/circle/Desktop/vue-music/node_modules/babel-loader/lib/index.js!/Users/circle/Desktop/vue-music/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/circle/Desktop/vue-music/src/components/player/player.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/circle/Desktop/vue-music/src/components/player/player.vue","mtime":1574170630925},{"path":"/Users/circle/Desktop/vue-music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/circle/Desktop/vue-music/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport _objectSpread from \"/Users/circle/Desktop/vue-music/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapMutations, mapActions } from 'vuex';\nimport animations from 'create-keyframe-animation';\nimport { prefixStyle } from 'common/js/dom';\nimport ProgressBar from 'base/progress-bar/progress-bar';\nimport ProgressCircle from 'base/progress-circle/progress-circle';\nimport { playMode } from 'common/js/config';\nimport Lyric from 'lyric-parser';\nimport Scroll from 'base/scroll/scroll';\nimport { playerMixin } from 'common/js/mixin';\nimport Playlist from 'components/playlist/playlist';\nvar transform = prefixStyle('transform');\nvar transitionDuration = prefixStyle('transitionDuration');\nvar timeExp = /\\[(\\d{2}):(\\d{2}):(\\d{2})]/g;\nexport default {\n  mixins: [playerMixin],\n  data: function data() {\n    return {\n      songReady: false,\n      currentTime: 0,\n      radius: 32,\n      currentLyric: null,\n      currentLineNum: 0,\n      currentShow: 'cd',\n      playingLyric: '',\n      isPureMusic: false,\n      pureMusicLyric: ''\n    };\n  },\n  computed: _objectSpread({\n    cdCls: function cdCls() {\n      return this.playing ? 'play' : '';\n    },\n    playIcon: function playIcon() {\n      return this.playing ? 'icon-pause' : 'icon-play';\n    },\n    miniIcon: function miniIcon() {\n      return this.playing ? 'icon-pause-mini' : 'icon-play-mini';\n    },\n    disableCls: function disableCls() {\n      return this.songReady ? '' : 'disable';\n    },\n    percent: function percent() {\n      return this.currentTime / this.currentSong.duration;\n    }\n  }, mapGetters(['currentIndex', 'fullScreen', 'playing'])),\n  created: function created() {\n    this.touch = {};\n  },\n  methods: _objectSpread({\n    back: function back() {\n      this.setFullScreen(false);\n    },\n    open: function open() {\n      this.setFullScreen(true);\n    },\n    enter: function enter(el, done) {\n      var _this$_getPosAndScale = this._getPosAndScale(),\n          x = _this$_getPosAndScale.x,\n          y = _this$_getPosAndScale.y,\n          scale = _this$_getPosAndScale.scale;\n\n      var animation = {\n        0: {\n          transform: \"translate3d(\".concat(x, \"px,\").concat(y, \"px,0) scale(\").concat(scale, \")\")\n        },\n        60: {\n          transform: \"translate3d(0,0,0) scale(1.1)\"\n        },\n        100: {\n          transform: \"translate3d(0,0,0) scale(1)\"\n        }\n      };\n      animations.registerAnimation({\n        name: 'move',\n        animation: animation,\n        presets: {\n          duration: 400,\n          easing: 'linear'\n        }\n      });\n      animations.runAnimation(this.$refs.cdWrapper, 'move', done);\n    },\n    afterEnter: function afterEnter() {\n      animations.unregisterAnimation('move');\n      this.$refs.cdWrapper.style.animation = '';\n    },\n    leave: function leave(el, done) {\n      this.$refs.cdWrapper.style.transition = 'all 0.4s';\n\n      var _this$_getPosAndScale2 = this._getPosAndScale(),\n          x = _this$_getPosAndScale2.x,\n          y = _this$_getPosAndScale2.y,\n          scale = _this$_getPosAndScale2.scale;\n\n      this.$refs.cdWrapper.style[transform] = \"translate3d(\".concat(x, \"px,\").concat(y, \"px,0) scale(\").concat(scale, \")\");\n      var timer = setTimeout(done, 400);\n      this.$refs.cdWrapper.addEventListener('transitionend', function () {\n        clearTimeout(timer);\n        done();\n      });\n    },\n    afterLeave: function afterLeave() {\n      this.$refs.cdWrapper.style.transition = '';\n      this.$refs.cdWrapper.style[transform] = '';\n    },\n    togglePlaying: function togglePlaying() {\n      if (!this.songReady) {\n        return;\n      }\n\n      this.setPlayingState(!this.playing);\n\n      if (this.currentLyric) {\n        this.currentLyric.togglePlay();\n      }\n    },\n    end: function end() {\n      this.currentTime = 0;\n\n      if (this.mode === playMode.loop) {\n        this.loop();\n      } else {\n        this.next();\n      }\n    },\n    loop: function loop() {\n      this.$refs.audio.currentTime = 0;\n      this.$refs.audio.play();\n      this.setPlayingState(true);\n\n      if (this.currentLyric) {\n        this.currentLyric.seek(0);\n      }\n    },\n    next: function next() {\n      if (!this.songReady) {\n        return;\n      }\n\n      if (this.playlist.length === 1) {\n        this.loop();\n      } else {\n        var index = this.currentIndex + 1;\n\n        if (index === this.playlist.length) {\n          index = 0;\n        }\n\n        this.setCurrentIndex(index);\n\n        if (!this.playing) {\n          this.togglePlaying();\n        }\n      }\n    },\n    prev: function prev() {\n      if (!this.songReady) {\n        return;\n      }\n\n      if (this.playlist.length === 1) {\n        this.loop();\n      } else {\n        var index = this.currentIndex - 1;\n\n        if (index === -1) {\n          index = this.playlist.length - 1;\n        }\n\n        this.setCurrentIndex(index);\n\n        if (!this.playing) {\n          this.togglePlaying();\n        }\n      }\n    },\n    ready: function ready() {\n      clearTimeout(this.timer); // 监听 playing 这个事件可以确保慢网速或者快速切换歌曲导致的 DOM Exception\n\n      this.songReady = true;\n      this.canLyricPlay = true;\n      this.savePlayHistory(this.currentSong); // 如果歌曲的播放晚于歌词的出现，播放的时候需要同步歌词\n\n      if (this.currentLyric && !this.isPureMusic) {\n        this.currentLyric.seek(this.currentTime * 1000);\n      }\n    },\n    paused: function paused() {\n      this.setPlayingState(false);\n\n      if (this.currentLyric) {\n        this.currentLyric.stop();\n      }\n    },\n    error: function error() {\n      clearTimeout(this.timer);\n      this.songReady = true;\n    },\n    updateTime: function updateTime(e) {\n      this.currentTime = e.target.currentTime;\n    },\n    format: function format(interval) {\n      interval = interval | 0;\n      var minute = interval / 60 | 0;\n\n      var second = this._pad(interval % 60);\n\n      return \"\".concat(minute, \":\").concat(second);\n    },\n    onProgressBarChanging: function onProgressBarChanging(percent) {\n      this.currentTime = this.currentSong.duration * percent;\n\n      if (this.currentLyric) {\n        this.currentLyric.seek(this.currentTime * 1000);\n      }\n    },\n    onProgressBarChange: function onProgressBarChange(percent) {\n      var currentTime = this.currentSong.duration * percent;\n      this.currentTime = this.$refs.audio.currentTime = currentTime;\n\n      if (this.currentLyric) {\n        this.currentLyric.seek(currentTime * 1000);\n      }\n\n      if (!this.playing) {\n        this.togglePlaying();\n      }\n    },\n    getLyric: function getLyric() {\n      var _this = this;\n\n      this.currentSong.getLyric().then(function (lyric) {\n        if (_this.currentSong.lyric !== lyric) {\n          return;\n        }\n\n        _this.currentLyric = new Lyric(lyric, _this.handleLyric);\n        _this.isPureMusic = !_this.currentLyric.lines.length;\n\n        if (_this.isPureMusic) {\n          _this.pureMusicLyric = _this.currentLyric.lrc.replace(timeExp, '').trim();\n          _this.playingLyric = _this.pureMusicLyric;\n        } else {\n          if (_this.playing && _this.canLyricPlay) {\n            // 这个时候有可能用户已经播放了歌曲，要切到对应位置\n            _this.currentLyric.seek(_this.currentTime * 1000);\n          }\n        }\n      }).catch(function () {\n        _this.currentLyric = null;\n        _this.playingLyric = '';\n        _this.currentLineNum = 0;\n      });\n    },\n    handleLyric: function handleLyric(_ref) {\n      var lineNum = _ref.lineNum,\n          txt = _ref.txt;\n\n      if (!this.$refs.lyricLine) {\n        return;\n      }\n\n      this.currentLineNum = lineNum;\n\n      if (lineNum > 5) {\n        var lineEl = this.$refs.lyricLine[lineNum - 5];\n        this.$refs.lyricList.scrollToElement(lineEl, 1000);\n      } else {\n        this.$refs.lyricList.scrollTo(0, 0, 1000);\n      }\n\n      this.playingLyric = txt;\n    },\n    showPlaylist: function showPlaylist() {\n      this.$refs.playlist.show();\n    },\n    middleTouchStart: function middleTouchStart(e) {\n      this.touch.initiated = true; // 用来判断是否是一次移动\n\n      this.touch.moved = false;\n      var touch = e.touches[0];\n      this.touch.startX = touch.pageX;\n      this.touch.startY = touch.pageY;\n    },\n    middleTouchMove: function middleTouchMove(e) {\n      if (!this.touch.initiated) {\n        return;\n      }\n\n      var touch = e.touches[0];\n      var deltaX = touch.pageX - this.touch.startX;\n      var deltaY = touch.pageY - this.touch.startY;\n\n      if (Math.abs(deltaY) > Math.abs(deltaX)) {\n        return;\n      }\n\n      if (!this.touch.moved) {\n        this.touch.moved = true;\n      }\n\n      var left = this.currentShow === 'cd' ? 0 : -window.innerWidth;\n      var offsetWidth = Math.min(0, Math.max(-window.innerWidth, left + deltaX));\n      this.touch.percent = Math.abs(offsetWidth / window.innerWidth);\n      this.$refs.lyricList.$el.style[transform] = \"translate3d(\".concat(offsetWidth, \"px,0,0)\");\n      this.$refs.lyricList.$el.style[transitionDuration] = 0;\n      this.$refs.middleL.style.opacity = 1 - this.touch.percent;\n      this.$refs.middleL.style[transitionDuration] = 0;\n    },\n    middleTouchEnd: function middleTouchEnd() {\n      if (!this.touch.moved) {\n        return;\n      }\n\n      var offsetWidth;\n      var opacity;\n\n      if (this.currentShow === 'cd') {\n        if (this.touch.percent > 0.1) {\n          offsetWidth = -window.innerWidth;\n          opacity = 0;\n          this.currentShow = 'lyric';\n        } else {\n          offsetWidth = 0;\n          opacity = 1;\n        }\n      } else {\n        if (this.touch.percent < 0.9) {\n          offsetWidth = 0;\n          this.currentShow = 'cd';\n          opacity = 1;\n        } else {\n          offsetWidth = -window.innerWidth;\n          opacity = 0;\n        }\n      }\n\n      var time = 300;\n      this.$refs.lyricList.$el.style[transform] = \"translate3d(\".concat(offsetWidth, \"px,0,0)\");\n      this.$refs.lyricList.$el.style[transitionDuration] = \"\".concat(time, \"ms\");\n      this.$refs.middleL.style.opacity = opacity;\n      this.$refs.middleL.style[transitionDuration] = \"\".concat(time, \"ms\");\n      this.touch.initiated = false;\n    },\n    _pad: function _pad(num) {\n      var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 2;\n      var len = num.toString().length;\n\n      while (len < n) {\n        num = '0' + num;\n        len++;\n      }\n\n      return num;\n    },\n    _getPosAndScale: function _getPosAndScale() {\n      var targetWidth = 40;\n      var paddingLeft = 40;\n      var paddingBottom = 30;\n      var paddingTop = 80;\n      var width = window.innerWidth * 0.8;\n      var scale = targetWidth / width;\n      var x = -(window.innerWidth / 2 - paddingLeft);\n      var y = window.innerHeight - paddingTop - width / 2 - paddingBottom;\n      return {\n        x: x,\n        y: y,\n        scale: scale\n      };\n    },\n\n    /**\n     * 计算内层Image的transform，并同步到外层容器\n     * @param wrapper\n     * @param inner\n     */\n    syncWrapperTransform: function syncWrapperTransform(wrapper, inner) {\n      if (!this.$refs[wrapper]) {\n        return;\n      }\n\n      var imageWrapper = this.$refs[wrapper];\n      var image = this.$refs[inner];\n      var wTransform = getComputedStyle(imageWrapper)[transform];\n      var iTransform = getComputedStyle(image)[transform];\n      imageWrapper.style[transform] = wTransform === 'none' ? iTransform : iTransform.concat(' ', wTransform);\n    }\n  }, mapMutations({\n    setFullScreen: 'SET_FULL_SCREEN'\n  }), mapActions(['savePlayHistory'])),\n  watch: {\n    currentSong: function currentSong(newSong, oldSong) {\n      var _this2 = this;\n\n      if (!newSong.id || !newSong.url || newSong.id === oldSong.id) {\n        return;\n      }\n\n      this.songReady = false;\n      this.canLyricPlay = false;\n\n      if (this.currentLyric) {\n        this.currentLyric.stop(); // 重置为null\n\n        this.currentLyric = null;\n        this.currentTime = 0;\n        this.playingLyric = '';\n        this.currentLineNum = 0;\n      }\n\n      this.$refs.audio.src = newSong.url;\n      this.$refs.audio.play(); // 若歌曲 5s 未播放，则认为超时，修改状态确保可以切换歌曲。\n\n      clearTimeout(this.timer);\n      this.timer = setTimeout(function () {\n        _this2.songReady = true;\n      }, 5000);\n      this.getLyric();\n    },\n    playing: function playing(newPlaying) {\n      if (!this.songReady) {\n        return;\n      }\n\n      var audio = this.$refs.audio;\n      this.$nextTick(function () {\n        newPlaying ? audio.play() : audio.pause();\n      });\n\n      if (!newPlaying) {\n        if (this.fullScreen) {\n          this.syncWrapperTransform('imageWrapper', 'image');\n        } else {\n          this.syncWrapperTransform('miniWrapper', 'miniImage');\n        }\n      }\n    },\n    fullScreen: function fullScreen(newVal) {\n      var _this3 = this;\n\n      if (newVal) {\n        setTimeout(function () {\n          _this3.$refs.lyricList.refresh();\n\n          _this3.$refs.progressBar.setProgressOffset(_this3.percent);\n        }, 20);\n      }\n    }\n  },\n  components: {\n    ProgressBar: ProgressBar,\n    ProgressCircle: ProgressCircle,\n    Scroll: Scroll,\n    Playlist: Playlist\n  }\n};",{"version":3,"sources":["player.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"player\" v-show=\"playlist.length>0\">\n    <transition name=\"normal\"\n                @enter=\"enter\"\n                @after-enter=\"afterEnter\"\n                @leave=\"leave\"\n                @after-leave=\"afterLeave\"\n    >\n      <div class=\"normal-player\" v-show=\"fullScreen\">\n        <div class=\"background\">\n          <img width=\"100%\" height=\"100%\" :src=\"currentSong.image\">\n        </div>\n        <div class=\"top\">\n          <div class=\"back\" @click=\"back\">\n            <i class=\"icon-back\"></i>\n          </div>\n          <h1 class=\"title\" v-html=\"currentSong.name\"></h1>\n          <h2 class=\"subtitle\" v-html=\"currentSong.singer\"></h2>\n        </div>\n        <div class=\"middle\"\n             @touchstart.prevent=\"middleTouchStart\"\n             @touchmove.prevent=\"middleTouchMove\"\n             @touchend=\"middleTouchEnd\"\n        >\n          <div class=\"middle-l\" ref=\"middleL\">\n            <div class=\"cd-wrapper\" ref=\"cdWrapper\">\n              <div class=\"cd\" ref=\"imageWrapper\">\n                <img ref=\"image\" :class=\"cdCls\" class=\"image\" :src=\"currentSong.image\">\n              </div>\n            </div>\n            <div class=\"playing-lyric-wrapper\">\n              <div class=\"playing-lyric\">{{playingLyric}}</div>\n            </div>\n          </div>\n          <scroll class=\"middle-r\" ref=\"lyricList\" :data=\"currentLyric && currentLyric.lines\">\n            <div class=\"lyric-wrapper\">\n              <div v-if=\"currentLyric\">\n                <p ref=\"lyricLine\"\n                   class=\"text\"\n                   :class=\"{'current': currentLineNum ===index}\"\n                   v-for=\"(line,index) in currentLyric.lines\"\n                   :key=\"index\"\n                >{{line.txt}}</p>\n              </div>\n              <div class=\"pure-music\" v-show=\"isPureMusic\">\n                <p>{{pureMusicLyric}}</p>\n              </div>\n            </div>\n          </scroll>\n        </div>\n        <div class=\"bottom\">\n          <div class=\"dot-wrapper\">\n            <span class=\"dot\" :class=\"{'active':currentShow==='cd'}\"></span>\n            <span class=\"dot\" :class=\"{'active':currentShow==='lyric'}\"></span>\n          </div>\n          <div class=\"progress-wrapper\">\n            <span class=\"time time-l\">{{format(currentTime)}}</span>\n            <div class=\"progress-bar-wrapper\">\n              <progress-bar ref=\"progressBar\" :percent=\"percent\" @percentChange=\"onProgressBarChange\"\n                            @percentChanging=\"onProgressBarChanging\"></progress-bar>\n            </div>\n            <span class=\"time time-r\">{{format(currentSong.duration)}}</span>\n          </div>\n          <div class=\"operators\">\n            <div class=\"icon i-left\" @click=\"changeMode\">\n              <i :class=\"iconMode\"></i>\n            </div>\n            <div class=\"icon i-left\" :class=\"disableCls\">\n              <i @click=\"prev\" class=\"icon-prev\"></i>\n            </div>\n            <div class=\"icon i-center\" :class=\"disableCls\">\n              <i class=\"needsclick\" @click=\"togglePlaying\" :class=\"playIcon\"></i>\n            </div>\n            <div class=\"icon i-right\" :class=\"disableCls\">\n              <i @click=\"next\" class=\"icon-next\"></i>\n            </div>\n            <div class=\"icon i-right\">\n              <i @click=\"toggleFavorite(currentSong)\" class=\"icon\" :class=\"favoriteIcon\"></i>\n            </div>\n          </div>\n        </div>\n      </div>\n    </transition>\n    <transition name=\"mini\">\n      <div class=\"mini-player\" v-show=\"!fullScreen\" @click=\"open\">\n        <div class=\"icon\">\n          <div class=\"imgWrapper\" ref=\"miniWrapper\">\n            <img ref=\"miniImage\" :class=\"cdCls\" width=\"40\" height=\"40\" :src=\"currentSong.image\">\n          </div>\n        </div>\n        <div class=\"text\">\n          <h2 class=\"name\" v-html=\"currentSong.name\"></h2>\n          <p class=\"desc\" v-html=\"currentSong.singer\"></p>\n        </div>\n        <div class=\"control\">\n          <progress-circle :radius=\"radius\" :percent=\"percent\">\n            <i @click.stop=\"togglePlaying\" class=\"icon-mini\" :class=\"miniIcon\"></i>\n          </progress-circle>\n        </div>\n        <div class=\"control\" @click.stop=\"showPlaylist\">\n          <i class=\"icon-playlist\"></i>\n        </div>\n      </div>\n    </transition>\n    <playlist ref=\"playlist\"></playlist>\n    <audio ref=\"audio\" @playing=\"ready\" @error=\"error\" @timeupdate=\"updateTime\"\n           @ended=\"end\" @pause=\"paused\"></audio>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\n  import { mapGetters, mapMutations, mapActions } from 'vuex'\n  import animations from 'create-keyframe-animation'\n  import { prefixStyle } from 'common/js/dom'\n  import ProgressBar from 'base/progress-bar/progress-bar'\n  import ProgressCircle from 'base/progress-circle/progress-circle'\n  import { playMode } from 'common/js/config'\n  import Lyric from 'lyric-parser'\n  import Scroll from 'base/scroll/scroll'\n  import { playerMixin } from 'common/js/mixin'\n  import Playlist from 'components/playlist/playlist'\n\n  const transform = prefixStyle('transform')\n  const transitionDuration = prefixStyle('transitionDuration')\n\n  const timeExp = /\\[(\\d{2}):(\\d{2}):(\\d{2})]/g\n\n  export default {\n    mixins: [playerMixin],\n    data () {\n      return {\n        songReady: false,\n        currentTime: 0,\n        radius: 32,\n        currentLyric: null,\n        currentLineNum: 0,\n        currentShow: 'cd',\n        playingLyric: '',\n        isPureMusic: false,\n        pureMusicLyric: ''\n      }\n    },\n    computed: {\n      cdCls () {\n        return this.playing ? 'play' : ''\n      },\n      playIcon () {\n        return this.playing ? 'icon-pause' : 'icon-play'\n      },\n      miniIcon () {\n        return this.playing ? 'icon-pause-mini' : 'icon-play-mini'\n      },\n      disableCls () {\n        return this.songReady ? '' : 'disable'\n      },\n      percent () {\n        return this.currentTime / this.currentSong.duration\n      },\n      ...mapGetters([\n        'currentIndex',\n        'fullScreen',\n        'playing'\n      ])\n    },\n    created () {\n      this.touch = {}\n    },\n    methods: {\n      back () {\n        this.setFullScreen(false)\n      },\n      open () {\n        this.setFullScreen(true)\n      },\n      enter (el, done) {\n        const { x, y, scale } = this._getPosAndScale()\n\n        let animation = {\n          0: {\n            transform: `translate3d(${x}px,${y}px,0) scale(${scale})`\n          },\n          60: {\n            transform: `translate3d(0,0,0) scale(1.1)`\n          },\n          100: {\n            transform: `translate3d(0,0,0) scale(1)`\n          }\n        }\n\n        animations.registerAnimation({\n          name: 'move',\n          animation,\n          presets: {\n            duration: 400,\n            easing: 'linear'\n          }\n        })\n\n        animations.runAnimation(this.$refs.cdWrapper, 'move', done)\n      },\n      afterEnter () {\n        animations.unregisterAnimation('move')\n        this.$refs.cdWrapper.style.animation = ''\n      },\n      leave (el, done) {\n        this.$refs.cdWrapper.style.transition = 'all 0.4s'\n        const { x, y, scale } = this._getPosAndScale()\n        this.$refs.cdWrapper.style[transform] = `translate3d(${x}px,${y}px,0) scale(${scale})`\n        const timer = setTimeout(done, 400)\n        this.$refs.cdWrapper.addEventListener('transitionend', () => {\n          clearTimeout(timer)\n          done()\n        })\n      },\n      afterLeave () {\n        this.$refs.cdWrapper.style.transition = ''\n        this.$refs.cdWrapper.style[transform] = ''\n      },\n      togglePlaying () {\n        if (!this.songReady) {\n          return\n        }\n        this.setPlayingState(!this.playing)\n        if (this.currentLyric) {\n          this.currentLyric.togglePlay()\n        }\n      },\n      end () {\n        this.currentTime = 0\n        if (this.mode === playMode.loop) {\n          this.loop()\n        } else {\n          this.next()\n        }\n      },\n      loop () {\n        this.$refs.audio.currentTime = 0\n        this.$refs.audio.play()\n        this.setPlayingState(true)\n        if (this.currentLyric) {\n          this.currentLyric.seek(0)\n        }\n      },\n      next () {\n        if (!this.songReady) {\n          return\n        }\n        if (this.playlist.length === 1) {\n          this.loop()\n        } else {\n          let index = this.currentIndex + 1\n          if (index === this.playlist.length) {\n            index = 0\n          }\n          this.setCurrentIndex(index)\n          if (!this.playing) {\n            this.togglePlaying()\n          }\n        }\n      },\n      prev () {\n        if (!this.songReady) {\n          return\n        }\n        if (this.playlist.length === 1) {\n          this.loop()\n        } else {\n          let index = this.currentIndex - 1\n          if (index === -1) {\n            index = this.playlist.length - 1\n          }\n          this.setCurrentIndex(index)\n          if (!this.playing) {\n            this.togglePlaying()\n          }\n        }\n      },\n      ready () {\n        clearTimeout(this.timer)\n        // 监听 playing 这个事件可以确保慢网速或者快速切换歌曲导致的 DOM Exception\n        this.songReady = true\n        this.canLyricPlay = true\n        this.savePlayHistory(this.currentSong)\n        // 如果歌曲的播放晚于歌词的出现，播放的时候需要同步歌词\n        if (this.currentLyric && !this.isPureMusic) {\n          this.currentLyric.seek(this.currentTime * 1000)\n        }\n      },\n      paused () {\n        this.setPlayingState(false)\n        if (this.currentLyric) {\n          this.currentLyric.stop()\n        }\n      },\n      error () {\n        clearTimeout(this.timer)\n        this.songReady = true\n      },\n      updateTime (e) {\n        this.currentTime = e.target.currentTime\n      },\n      format (interval) {\n        interval = interval | 0\n        const minute = interval / 60 | 0\n        const second = this._pad(interval % 60)\n        return `${minute}:${second}`\n      },\n      onProgressBarChanging (percent) {\n        this.currentTime = this.currentSong.duration * percent\n        if (this.currentLyric) {\n          this.currentLyric.seek(this.currentTime * 1000)\n        }\n      },\n      onProgressBarChange (percent) {\n        const currentTime = this.currentSong.duration * percent\n        this.currentTime = this.$refs.audio.currentTime = currentTime\n        if (this.currentLyric) {\n          this.currentLyric.seek(currentTime * 1000)\n        }\n        if (!this.playing) {\n          this.togglePlaying()\n        }\n      },\n      getLyric () {\n        this.currentSong.getLyric().then((lyric) => {\n          if (this.currentSong.lyric !== lyric) {\n            return\n          }\n          this.currentLyric = new Lyric(lyric, this.handleLyric)\n          this.isPureMusic = !this.currentLyric.lines.length\n          if (this.isPureMusic) {\n            this.pureMusicLyric = this.currentLyric.lrc.replace(timeExp, '').trim()\n            this.playingLyric = this.pureMusicLyric\n          } else {\n            if (this.playing && this.canLyricPlay) {\n              // 这个时候有可能用户已经播放了歌曲，要切到对应位置\n              this.currentLyric.seek(this.currentTime * 1000)\n            }\n          }\n        }).catch(() => {\n          this.currentLyric = null\n          this.playingLyric = ''\n          this.currentLineNum = 0\n        })\n      },\n      handleLyric ({ lineNum, txt }) {\n        if (!this.$refs.lyricLine) {\n          return\n        }\n        this.currentLineNum = lineNum\n        if (lineNum > 5) {\n          let lineEl = this.$refs.lyricLine[lineNum - 5]\n          this.$refs.lyricList.scrollToElement(lineEl, 1000)\n        } else {\n          this.$refs.lyricList.scrollTo(0, 0, 1000)\n        }\n        this.playingLyric = txt\n      },\n      showPlaylist () {\n        this.$refs.playlist.show()\n      },\n      middleTouchStart (e) {\n        this.touch.initiated = true\n        // 用来判断是否是一次移动\n        this.touch.moved = false\n        const touch = e.touches[0]\n        this.touch.startX = touch.pageX\n        this.touch.startY = touch.pageY\n      },\n      middleTouchMove (e) {\n        if (!this.touch.initiated) {\n          return\n        }\n        const touch = e.touches[0]\n        const deltaX = touch.pageX - this.touch.startX\n        const deltaY = touch.pageY - this.touch.startY\n        if (Math.abs(deltaY) > Math.abs(deltaX)) {\n          return\n        }\n        if (!this.touch.moved) {\n          this.touch.moved = true\n        }\n        const left = this.currentShow === 'cd' ? 0 : -window.innerWidth\n        const offsetWidth = Math.min(0, Math.max(-window.innerWidth, left + deltaX))\n        this.touch.percent = Math.abs(offsetWidth / window.innerWidth)\n        this.$refs.lyricList.$el.style[transform] = `translate3d(${offsetWidth}px,0,0)`\n        this.$refs.lyricList.$el.style[transitionDuration] = 0\n        this.$refs.middleL.style.opacity = 1 - this.touch.percent\n        this.$refs.middleL.style[transitionDuration] = 0\n      },\n      middleTouchEnd () {\n        if (!this.touch.moved) {\n          return\n        }\n        let offsetWidth\n        let opacity\n        if (this.currentShow === 'cd') {\n          if (this.touch.percent > 0.1) {\n            offsetWidth = -window.innerWidth\n            opacity = 0\n            this.currentShow = 'lyric'\n          } else {\n            offsetWidth = 0\n            opacity = 1\n          }\n        } else {\n          if (this.touch.percent < 0.9) {\n            offsetWidth = 0\n            this.currentShow = 'cd'\n            opacity = 1\n          } else {\n            offsetWidth = -window.innerWidth\n            opacity = 0\n          }\n        }\n        const time = 300\n        this.$refs.lyricList.$el.style[transform] = `translate3d(${offsetWidth}px,0,0)`\n        this.$refs.lyricList.$el.style[transitionDuration] = `${time}ms`\n        this.$refs.middleL.style.opacity = opacity\n        this.$refs.middleL.style[transitionDuration] = `${time}ms`\n        this.touch.initiated = false\n      },\n      _pad (num, n = 2) {\n        let len = num.toString().length\n        while (len < n) {\n          num = '0' + num\n          len++\n        }\n        return num\n      },\n      _getPosAndScale () {\n        const targetWidth = 40\n        const paddingLeft = 40\n        const paddingBottom = 30\n        const paddingTop = 80\n        const width = window.innerWidth * 0.8\n        const scale = targetWidth / width\n        const x = -(window.innerWidth / 2 - paddingLeft)\n        const y = window.innerHeight - paddingTop - width / 2 - paddingBottom\n        return {\n          x,\n          y,\n          scale\n        }\n      },\n      /**\n       * 计算内层Image的transform，并同步到外层容器\n       * @param wrapper\n       * @param inner\n       */\n      syncWrapperTransform (wrapper, inner) {\n        if (!this.$refs[wrapper]) {\n          return\n        }\n        let imageWrapper = this.$refs[wrapper]\n        let image = this.$refs[inner]\n        let wTransform = getComputedStyle(imageWrapper)[transform]\n        let iTransform = getComputedStyle(image)[transform]\n        imageWrapper.style[transform] = wTransform === 'none' ? iTransform : iTransform.concat(' ', wTransform)\n      },\n      ...mapMutations({\n        setFullScreen: 'SET_FULL_SCREEN'\n      }),\n      ...mapActions([\n        'savePlayHistory'\n      ])\n    },\n    watch: {\n      currentSong (newSong, oldSong) {\n        if (!newSong.id || !newSong.url || newSong.id === oldSong.id) {\n          return\n        }\n        this.songReady = false\n        this.canLyricPlay = false\n        if (this.currentLyric) {\n          this.currentLyric.stop()\n          // 重置为null\n          this.currentLyric = null\n          this.currentTime = 0\n          this.playingLyric = ''\n          this.currentLineNum = 0\n        }\n        this.$refs.audio.src = newSong.url\n        this.$refs.audio.play()\n        // 若歌曲 5s 未播放，则认为超时，修改状态确保可以切换歌曲。\n        clearTimeout(this.timer)\n        this.timer = setTimeout(() => {\n          this.songReady = true\n        }, 5000)\n        this.getLyric()\n      },\n      playing (newPlaying) {\n        if (!this.songReady) {\n          return\n        }\n        const audio = this.$refs.audio\n        this.$nextTick(() => {\n          newPlaying ? audio.play() : audio.pause()\n        })\n        if (!newPlaying) {\n          if (this.fullScreen) {\n            this.syncWrapperTransform('imageWrapper', 'image')\n          } else {\n            this.syncWrapperTransform('miniWrapper', 'miniImage')\n          }\n        }\n      },\n      fullScreen (newVal) {\n        if (newVal) {\n          setTimeout(() => {\n            this.$refs.lyricList.refresh()\n            this.$refs.progressBar.setProgressOffset(this.percent)\n          }, 20)\n        }\n      }\n    },\n    components: {\n      ProgressBar,\n      ProgressCircle,\n      Scroll,\n      Playlist\n    }\n  }\n</script>\n\n<style scoped lang=\"stylus\" rel=\"stylesheet/stylus\">\n  @import \"~common/stylus/variable\"\n  @import \"~common/stylus/mixin\"\n\n  .player\n    .normal-player\n      position: fixed\n      left: 0\n      right: 0\n      top: 0\n      bottom: 0\n      z-index: 150\n      background: $color-background\n      .background\n        position: absolute\n        left: 0\n        top: 0\n        width: 100%\n        height: 100%\n        z-index: -1\n        opacity: 0.6\n        filter: blur(20px)\n      .top\n        position: relative\n        margin-bottom: 25px\n        .back\n          position absolute\n          top: 0\n          left: 6px\n          z-index: 50\n          .icon-back\n            display: block\n            padding: 9px\n            font-size: $font-size-large-x\n            color: $color-theme\n            transform: rotate(-90deg)\n        .title\n          width: 70%\n          margin: 0 auto\n          line-height: 40px\n          text-align: center\n          no-wrap()\n          font-size: $font-size-large\n          color: $color-text\n        .subtitle\n          line-height: 20px\n          text-align: center\n          font-size: $font-size-medium\n          color: $color-text\n      .middle\n        position: fixed\n        width: 100%\n        top: 80px\n        bottom: 170px\n        white-space: nowrap\n        font-size: 0\n        .middle-l\n          display: inline-block\n          vertical-align: top\n          position: relative\n          width: 100%\n          height: 0\n          padding-top: 80%\n          .cd-wrapper\n            position: absolute\n            left: 10%\n            top: 0\n            width: 80%\n            box-sizing: border-box\n            height: 100%\n            .cd\n              width: 100%\n              height: 100%\n              border-radius: 50%\n              .image\n                position: absolute\n                left: 0\n                top: 0\n                width: 100%\n                height: 100%\n                box-sizing: border-box\n                border-radius: 50%\n                border: 10px solid rgba(255, 255, 255, 0.1)\n              .play\n                animation: rotate 20s linear infinite\n          .playing-lyric-wrapper\n            width: 80%\n            margin: 30px auto 0 auto\n            overflow: hidden\n            text-align: center\n            .playing-lyric\n              height: 20px\n              line-height: 20px\n              font-size: $font-size-medium\n              color: $color-text-l\n        .middle-r\n          display: inline-block\n          vertical-align: top\n          width: 100%\n          height: 100%\n          overflow: hidden\n          .lyric-wrapper\n            width: 80%\n            margin: 0 auto\n            overflow: hidden\n            text-align: center\n            .text\n              line-height: 32px\n              color: $color-text-l\n              font-size: $font-size-medium\n              &.current\n                color: $color-text\n            .pure-music\n              padding-top: 50%\n              line-height: 32px\n              color: $color-text-l\n              font-size: $font-size-medium\n      .bottom\n        position: absolute\n        bottom: 50px\n        width: 100%\n        .dot-wrapper\n          text-align: center\n          font-size: 0\n          .dot\n            display: inline-block\n            vertical-align: middle\n            margin: 0 4px\n            width: 8px\n            height: 8px\n            border-radius: 50%\n            background: $color-text-l\n            &.active\n              width: 20px\n              border-radius: 5px\n              background: $color-text-ll\n        .progress-wrapper\n          display: flex\n          align-items: center\n          width: 80%\n          margin: 0px auto\n          padding: 10px 0\n          .time\n            color: $color-text\n            font-size: $font-size-small\n            flex: 0 0 30px\n            line-height: 30px\n            width: 30px\n            &.time-l\n              text-align: left\n            &.time-r\n              text-align: right\n          .progress-bar-wrapper\n            flex: 1\n        .operators\n          display: flex\n          align-items: center\n          .icon\n            flex: 1\n            color: $color-theme\n            &.disable\n              color: $color-theme-d\n            i\n              font-size: 30px\n          .i-left\n            text-align: right\n          .i-center\n            padding: 0 20px\n            text-align: center\n            i\n              font-size: 40px\n          .i-right\n            text-align: left\n          .icon-favorite\n            color: $color-sub-theme\n      &.normal-enter-active, &.normal-leave-active\n        transition: all 0.4s\n        .top, .bottom\n          transition: all 0.4s cubic-bezier(0.86, 0.18, 0.82, 1.32)\n      &.normal-enter, &.normal-leave-to\n        opacity: 0\n        .top\n          transform: translate3d(0, -100px, 0)\n        .bottom\n          transform: translate3d(0, 100px, 0)\n    .mini-player\n      display: flex\n      align-items: center\n      position: fixed\n      left: 0\n      bottom: 0\n      z-index: 180\n      width: 100%\n      height: 60px\n      background: $color-highlight-background\n      &.mini-enter-active, &.mini-leave-active\n        transition: all 0.4s\n      &.mini-enter, &.mini-leave-to\n        opacity: 0\n      .icon\n        flex: 0 0 40px\n        width: 40px\n        height: 40px\n        padding: 0 10px 0 20px\n        .imgWrapper\n          height: 100%\n          width: 100%\n          img\n            border-radius: 50%\n            &.play\n              animation: rotate 10s linear infinite\n            &.pause\n              animation-play-state: paused\n      .text\n        display: flex\n        flex-direction: column\n        justify-content: center\n        flex: 1\n        line-height: 20px\n        overflow: hidden\n        .name\n          margin-bottom: 2px\n          no-wrap()\n          font-size: $font-size-medium\n          color: $color-text\n        .desc\n          no-wrap()\n          font-size: $font-size-small\n          color: $color-text-d\n      .control\n        flex: 0 0 30px\n        width: 30px\n        padding: 0 10px\n        .icon-play-mini, .icon-pause-mini, .icon-playlist\n          font-size: 30px\n          color: $color-theme-d\n        .icon-mini\n          font-size: 32px\n          position: absolute\n          left: 0\n          top: 0\n\n  @keyframes rotate\n    0%\n      transform: rotate(0)\n    100%\n      transform: rotate(360deg)\n</style>\n"],"sourceRoot":"src/components/player"}]}